<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <meta http-equiv="MSThemeCompatible" content="yes">
 <style>
  body, input{font-family:Tahoma; font-size:16px;margin:2px;}
 </style>
 <title>Разметить заголовки разделов согласно оглавлению документа</title>
 <script language=JavaScript type="text/javascript">
  window.returnValue=0;
  var params=window.dialogArguments;
  document.title="Разметить заголовки разделов согласно оглавлению документа v"+params["versionNum"]+". Автор Sclex.";
  var myWin=params["window"];
  var mainDocument=params["mainDocument"];
  var scriptVersion=params["versionNum"];
  var blockBeginParagraph, blockEndParagraph;
  var myRange, myRange2, processingType;

  function removeBlockMarkers() {
    if (mainDocument.getElementById("mtbc_BlockStart"))
      mainDocument.getElementById("mtbc_BlockStart").removeNode(false);
    if (mainDocument.getElementById("mtbc_BlockEnd"))
      mainDocument.getElementById("mtbc_BlockEnd").removeNode(false);
  }

  function makeSelection() {
    var elem=mainDocument.getElementById("mtbc_BlockStart");
    while (elem.nodeName!="P") elem=elem.parentNode;
    blockBeginParagraph=elem;
    var elem=mainDocument.getElementById("mtbc_BlockEnd");
    if (elem.previousSibling && elem.previousSibling.nodeName=="P")
      blockEndParagraph=elem.previousSibling;
    else {
      while (elem.nodeName!="P") elem=elem.parentNode;
      blockEndParagraph=elem;
    }
    myRange=mainDocument.body.createTextRange();
    myRange.moveToElementText(blockBeginParagraph);
    myRange2=mainDocument.body.createTextRange();
    myRange2.moveToElementText(blockEndParagraph);
    myRange.setEndPoint("EndToEnd",myRange2);
    myRange.select();
 }

  function markupTitles() {

    var weAreInBlock=false;

    try { var nbspChar=params["window"].external.GetNBSP(); var nbspEntity; if (nbspChar.charCodeAt(0)==160) nbspEntity="&nbsp;"; else nbspEntity=nbspChar; }
    catch(e) { var nbspChar=String.fromCharCode(160); var nbspEntity="&nbsp;";};

    function getRandomNum(n) {
     var s="";
     for (var i=1;i<=n;i++) {
       s+=Math.floor(Math.random()*10);
     }
     return s;
    }

    var myRegExp1=new RegExp("^[ "+nbspChar+"]+","");
    var myRegExp2=new RegExp("[ "+nbspChar+"]+","g");
    var myRegExp3=new RegExp("[ "+nbspChar+"]+$","");
    var changedTitleText;

    function getReadyTitlesArray() {
      var crLfRegExp2=new RegExp("[\\r\\n]+","gm");
      var crLfRegExp2_="\n";
      var contentsText=document.getElementById("contentsTextArea").value.replace(crLfRegExp2,crLfRegExp2_).replace(/[–—]/g,"-").replace(/[«„“»]/g,'"').replace(/…/g,"...").replace(/’/g,"'");
      titlesOutArr=contentsText.match(/^.+$/gm);
      contentsText=contentsText.toLowerCase();
      titlesArr=contentsText.match(/^.+$/gm);
      //alert(titlesArr);
    }
  
    var strEnding=new RegExp("^[ "+nbspChar+"]+\\d*$","g");
 
    var titleTextNew;

    function detectIfTitleFits(titleText) {
      //alert("detectIfTitleFits:\n\n"+titleText);
      titleTextNew=titleText.toLowerCase()
                         .replace(myRegExp1,"")
                         .replace(myRegExp2," ")
                         .replace(myRegExp3,"")
                         .replace(/[–—]/g,"-")
                         .replace(/[«„“»]/g,'"')
                         .replace(/…/g,"...")
                         .replace(/’/g,"'");
      for (var i=0; i<titlesArr.length; i++) {
        if (processingType=="PartialMatch") {
          if (titleTextNew.indexOf(titlesArr[i])==0) {
            delete titlesOutArr[i];
            return true;
          }
        }
        else if (processingType=="FullMatch") {
          if (titleTextNew==titlesArr[i]) {
            delete titlesOutArr[i];
            return true;
          }
          else if (titleTextNew.indexOf(titlesArr[i])==0 &&
                   titleTextNew.substr(titlesArr[i].length).search(strEnding)!=-1
                   ) {
            delete titlesOutArr[i];
            return true;
          }
        }
      }
      return false;
    }

    function processTitle(titlePtr) {
      if (!titlePtr) return;
      var ps=titlePtr.getElementsByTagName("P");
      for (var i=0; i<ps.length; i++)
        detectIfTitleFits(ps[i].innerText);
    }

    function processSectionAndSubsections(sectionPtr) {
       var ptrInSection=sectionPtr.firstChild;
       var titleBegin,titleEnd,i,whileFlag,titleBeginPrev,titleEndNext,newEl,el,myRegExp,saveNext;
       while (ptrInSection) {
        saveNext=ptrInSection.nextSibling;
        if (ptrInSection.className.toLowerCase()=="section") processSectionAndSubsections(ptrInSection);
        if (ptrInSection.className.toLowerCase()=="title") processTitle(ptrInSection);
        ptrInSection=saveNext;
       }
       ptrInSection=sectionPtr.firstChild;
       while (ptrInSection) {
        // alert("ptrInSection в начале while-а: \n\n"+ptrInSection.outerHTML);
        if (ptrInSection.nodeName=="P" && ptrInSection==blockBeginParagraph) {
          weAreInBlock=true;
          // alert("Мы теперь в блоке: \n\n"+ptrInSection.outerHTML);
        }
        if (ptrInSection.nodeName=="P" && ptrInSection.innerHTML=="") 
          ptrInSection.innerHTML=nbspChar;
        if (!weAreInBlock && ptrInSection.nodeName=="P" && ptrInSection.className!="subtitle" && detectIfTitleFits(ptrInSection.innerText)) {
         titleBegin=ptrInSection;
         titleEnd=ptrInSection;
         titleEnd.removeAttribute("className");
         titleEnd.removeAttribute("class");
         if (captureBeforeCnt>0) {
          i=1;
          whileFlag=true;
          while (whileFlag) {
           titleBeginPrev=titleBegin.previousSibling;
           if (titleBeginPrev && titleBeginPrev.nodeName=="P" &&
               titleBeginPrev.innerHTML.search(new RegExp("^Sclex_SplittingIntoSections_"+randomNum+"_"+"\\d+"+"_(begin|end)$"),"")<0) {
            if (titleBeginPrev.className=="subtitle") break;
            titleBegin=titleBeginPrev;
            titleBegin.removeAttribute("class");
            titleBegin.removeAttribute("className");
           }
           else whileFlag=false;
           i++;
           if (i>captureBeforeCnt) whileFlag=false;
          }
         } 
         newEl=mainDocument.createElement("P");
         newTitleCnt++;
         newEl.innerHTML="Sclex_SplittingIntoSections_"+randomNum+"_"+newTitleCnt+"_begin";
         titleBegin.parentNode.insertBefore(newEl,titleBegin);
         if (captureAfterCnt>0) {
          i=1;
          whileFlag=true;
          while (whileFlag) {
           titleEndNext=titleEnd.nextSibling;
           if (titleEndNext && titleEndNext.nodeName=="P") {
            if (titleEndNext.className=="subtitle") break;
            titleEnd=titleEndNext;
            titleEnd.removeAttribute("className");
            titleEnd.removeAttribute("class");
           }
           else whileFlag=false;
           i++;
           if (i>captureAfterCnt) whileFlag=false;        
          }
         } 
         newEl=mainDocument.createElement("P");
         newEl.innerHTML="Sclex_SplittingIntoSections_"+randomNum+"_"+newTitleCnt+"_end";
         el=titleEnd.parentNode.insertBefore(newEl,titleEnd.nextSibling);      
         ptrInSection=el.nextSibling;
        };
        else {
          if (ptrInSection && ptrInSection.nodeName=="P" && ptrInSection==blockEndParagraph) {
            weAreInBlock=false;
            // alert("Мы уже не в блоке: \n\n"+ptrInSection.outerHTML);
          }
          ptrInSection=ptrInSection.nextSibling;
        }
       }
       regExp1=new RegExp("<P(\\s[^>]*?)?>Sclex_SplittingIntoSections_"+randomNum+"_"+"(\\d+)_begin</P>","g");
       regExp1_="</DIV><DIV class=section><DIV class=title>";
       regExp2=new RegExp("<P(\\s[^>]*?)?>Sclex_SplittingIntoSections_"+randomNum+"_"+"(\\d+)_end</P>","g");
       regExp2_="</DIV>";
       regExp3=new RegExp("\\A\\s*?</DIV><DIV class=section>");
       regExp3_="";
       sectionPtr.outerHTML=sectionPtr.outerHTML.replace(regExp1,regExp1_).replace(regExp2,regExp2_).replace(regExp3,regExp3_);
       makeSelection();
    }

    function processBodyAndSubsections(bodyPtr) {
      var ptrInBody=bodyPtr.firstChild;
      var saveNext;
      while (ptrInBody) {
        saveNext=ptrInBody.nextSibling;
        if (ptrInBody.className.toLowerCase()=="section") processSectionAndSubsections(ptrInBody);
        ptrInBody=saveNext;
      }
    }

    function getVersionStr() {
      return "Скрипт «Разметить заголовки разделов согласно оглавлению документа» v"+scriptVersion+".\nАвтор Sclex.";
    }
 
    var fbwBody=mainDocument.getElementById("fbw_body");
    var ptrInFbwBody=fbwBody.firstChild;
    var newTitleCnt=0;
    var randomNum=getRandomNum(6);
    if (document.getElementById("radio1").checked) processingType="FullMatch";
    if (document.getElementById("radio2").checked) processingType="PartialMatch";
    var captureBeforeCnt=0;
    var captureAfterCnt=0;
    var titlesArr=[];
    var titlesOutArr=[];
    getReadyTitlesArray();
    if (!titlesArr) {
      alert("Список не содержит ни одного заголовка, поэтому заголовки в этот раз не были размечены.");
      return;
    }
    myWin.myBeginUndoUnit("разметку заголовков разделов согласно оглавлению");
    // вставим маркеры начала и конца выделения
    while (ptrInFbwBody) {
     if (ptrInFbwBody.className.toLowerCase()=="body") processBodyAndSubsections(ptrInFbwBody);
     ptrInFbwBody=ptrInFbwBody.nextSibling;
    }
    myWin.myEndUndoUnit();
    var titlesNewArr=[];
    for (var i=0; i<titlesOutArr.length; i++)
      if (titlesOutArr[i])
        titlesNewArr.push(titlesOutArr[i]);
    document.getElementById("contentsTextArea").value=titlesNewArr.join("\n\n");

    var myRange=mainDocument.body.createTextRange();
    myRange.moveToElementText(blockBeginParagraph);
    var myRange2=mainDocument.body.createTextRange();
    myRange2.moveToElementText(blockEndParagraph);
    myRange.setEndPoint("EndToEnd",myRange2);
    myRange.select();
    alert(getVersionStr()+"\n\nОбработка завершена.\nРазмечено заголовков: "+newTitleCnt+".");
  }

  function removeSymbols() {    
    try { var nbspChar=params["window"].external.GetNBSP(); var nbspEntity; if (nbspChar.charCodeAt(0)==160) nbspEntity="&nbsp;"; else nbspEntity=nbspChar; }
    catch(e) { var nbspChar=String.fromCharCode(160); var nbspEntity="&nbsp;";};
    var crLfRegExp=new RegExp("[\\r\\n]+","gm");
    var crLfRegExp_="\n\n";
    var nbspRegExp=new RegExp(nbspChar,"g");
    var nbspRegExp_=" ";
    var emptySpaceRegExp=new RegExp("[ "+nbspChar+"\\t]+","gm");
    var emptySpaceRegExp_=" ";
    var spacesAtTheBeginRegExp=new RegExp("^[ "+nbspChar+"]+","gm");
    var spacesAtTheBeginRegExp_="";
    var spacesAndNumberOnTheEndRegExp=new RegExp("[ "+nbspChar+"]*\\d+[ "+nbspChar+"]*$","gm");
    var spacesAndNumberOnTheEndRegExp_="";
    var trashRegExp=new RegExp("[ "+nbspChar+"'\\*.,’—_]+$","gm");
    var trashRegExp_="";
    var trashRegExp2=new RegExp("[ "+nbspChar+"'\\*.,’—_]*\\.\\.\\.\\..*$","gm");
    var trashRegExp2_="";
    var contentsText=document.getElementById("contentsTextArea").value;
    contentsText=contentsText.replace(crLfRegExp,crLfRegExp_)
                             .replace(nbspRegExp,nbspRegExp_)
                             .replace(emptySpaceRegExp,emptySpaceRegExp_)
                             .replace(spacesAtTheBeginRegExp,spacesAtTheBeginRegExp_)
                             .replace(spacesAndNumberOnTheEndRegExp,spacesAndNumberOnTheEndRegExp_)
                             .replace(trashRegExp,trashRegExp_)
                             .replace(trashRegExp2,trashRegExp2_)
                             .replace(crLfRegExp,crLfRegExp_);
    contentsTextArea.value=contentsText;
    //alert(contentsText);
  }
 </script>
<body onbeforeunload="removeBlockMarkers();">

<input type="button" value="Удалить из оглавления лишние символы" onclick="removeSymbols();">
<br>
<input type="radio" id="radio1" name="processingType" value="FullMatch" checked>
<label for="radio1" checked>Размечать заголовок при точном совпадении с абзацем документа</label>
<br>
<input type="radio" id="radio2" name="processingType" value="PartialMatch">
<label for="radio2">Размечать заголовок при совпадении его с *началом* абзаца документа</label>
<br>
<input type="button" value="Разметить заголовки разделов согласно списку" onclick="markupTitles();">
<textarea style="width:100%; height:70%;" id="contentsTextArea">
</textarea>
<script>
  var crLfRegExp=new RegExp("[\\r\\n]+","gm");
  var crLfRegExp_="\n\n";
  var params=window.dialogArguments;

  // найдем первый и последний абзац в пользовательском выделении
  var MyTagName="B";
  removeBlockMarkers();
  var ttr1=mainDocument.selection.createRange();
  var tr=ttr1.duplicate();
  tr.collapse();
  tr.pasteHTML("<"+MyTagName+" id=mtbc_BlockStart></"+MyTagName+">");
  tr=ttr1.duplicate();
  tr.collapse(false);
  tr.pasteHTML("<"+MyTagName+" id=mtbc_BlockEnd></"+MyTagName+">");
  // alert(fbwBody.outerHTML);
  makeSelection();
//  if (mainDocument.getElementById("mtbc_BlockStart"))
//    mainDocument.getElementById("mtbc_BlockStart").removeNode(true);
//  if (mainDocument.getElementById("mtbc_BlockEnd"))
//    mainDocument.getElementById("mtbc_BlockEnd").removeNode(true);
  document.getElementById("contentsTextArea").value=myRange.text.replace(crLfRegExp,crLfRegExp_);
</script>
</body>
</html>
